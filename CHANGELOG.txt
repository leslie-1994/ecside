EC Side介绍：
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
作者： fins （ name: Wei Zijun  ，  email:fins@163.com  ， blog:http://fins.javaeye.com  ）

EC Side是一个开源的列表组件。
他源自著名开源列表组件 eXtremeComponents （http://www.extremecomponents.org），
但现在已经脱离eXtremeComponents,独立发展（仍有部分代码来自 eXtremeComponents）。
“做最实用易用的列表组件”是ECSide的目标。


ECSide圈子：  
http://ecside.group.javaeye.com/

作者blog：
http://fins.javaeye.com/


===============================
2007-06-01 
ECSide 2.00 RC 1发布
六一献礼 :D
===============================

1 重写了crud实现的机制.
现在使用了批量提交,而不是每条记录一提交.
如果您原先的crud后台是自己写的action和dao,而且只支持单条操作.
那么您可以使用 ec:table提供的  batchUpdate="false"
依然继续使用单条提交方式.
关于crud详细的用法,近期会出一文档详细说明的.

2 重写了对自定义行以及自定义表头的实现机制
引入了一个小型的jar包:htmlparser.jar

3 增加对form的enctype属性的支持

4 解决了不支持Set集合的问题 

5 统一了org.ecside.util下util类的命名.统一加了s
为了考虑到兼容性 RequestUtil 类依然保留,但已经deprecated,建议使用RequestUtils代替之.


6 提供了更丰富的示例:
(1) demo_ch.jsp自定义复杂表头,并支持复杂表头的excel导出
(2) 提供了struts + DAO的基于数据库的 crud实现 demo.do?actionMethod=doQuery




===============================
2007-05-25 
ECSide 2.00 beta 3发布
===============================
示例更新:
1 加入了 struts 1.38和 ecside 结合的例子
(还不是最完善完整的版本,还有些特性没有演示)
demo.do?actionMethod=doQuery
2 加入了 自动生成列的 演示例子 (demo_auto.jsp)

代码变更:
把所有的 org.extremecomponents.*的包全部更名为org.ecside.*
tag引用的url 变成了 www.ecside.org
这两个变更可能会引起部分人的不满,但是我还是决定变了,原因有2
一是ecside和ec的差别越来越大,保留原名只会给人造成麻烦,误以为可以通用
二是这样的变更可以使ecside与原版ec共存.

对外部css js 图片文件的存放位置 做了调整,统一放到 ecside文件夹下


程序改进:
1 过滤器前面的小图标可以支持点击了,而不用非要按回车
2 某列不许被编辑,但是却希望他的值可以被提交时,可以使用 cellValue="值" 属性
例如例子demofull里的 用户名那列
3 对ECSideFilter进行了一些调整,同时解决了和spring耦合的问题


bug修正:

1 ECSideUtils.isSearchMatch的bug, 发现人 junhui.qiao
2 出现两个<table>具有相同id的bug, 发现人 111111
3 提交前回调函数( .beforeSubmit)无返回值的bug
4 不显示无导航按钮时,刷新按钮不好用的bug


其他:
关于"正在提交...＂一直存在的问题.
造成这个问题的原因很多,我原先的版本没有提供一个合理的更好的方法来帮助大家确定问题.
这个版本当后台出错的时候,会向前台发送错误信息,而不是让前台什么都不做.
所以,这个版本未必能直接解决"正在提交...＂一直存在的问题,但是可以更好的帮助大家定位问题.


除了以上的内容,程序还有其他一些细小的调整和bug修正,推荐更新:)

继续给自己做个广告:
[color=red]
我打算在上海找工作(java相关).如果您那里有合适的职位欢迎联系我.谢谢了.
[/color]



===============================
2007-05-17 
ECSide 2.00 beta 2发布

距离上次更新又过了快一个月的时间,
这个月由于个人琐事比较多,开发进度减缓了一点.大家谅解.

顺便给自己做个广告:
我打算在上海找工作(java相关).如果您那里有合适的职位欢迎联系我.谢谢了.

===============================
beta 2主要的改变:

改进: 
动态脚本语言可以应用于column的style中,见例子demofull.jsp .
加入了 easylist 示例的演示: /demo_list.jsp?easyList=userInfoList .
js文本信息编码分离 (分离出gbk版 和 utf-8版,可根据需要引入不同的版本) 
prototype_mini.js 微调,与prototype 1.51同步 
java文件格式由U8-Unix统一变为U8-Dos 
提供ecside.jar包

bug修改

添加记录所用的模板的id改为 ectable的Id+"_add_template" 
解决了"个别标签不支持公式语言, 例如 ec:extend" 
解决了"filter在不使用通配符时无法过滤出数据" 
解决了"当对记录进行修改并执行保存操作后，再点保存，还会再次执行" 
解决了"在反复调整"每页条数"时,分页导航栏不准确的bug"
解决了"无法打印的bug"




===============================
2007-04-27 
ECSide 2.00 beta 1发布
===============================
终于决定把2.0拿出来献丑了.
beta版本还没有很好的例子和文档(这话从1.0就开始说了 呵呵)
主要新特性-----太多了,未来的几天我再圈子的论坛里慢慢补充吧
明天就要结束漫长的出差之旅(半年啊 :'( )了,直接杀向上海了,祝我好运吧

这次只提供了3个简单的例子

一个传统列表的例子,这里的传统是相对新版本的ecside生成的列表所说的.
可以简单的理解为,静态的整体table(表头和表体在一个table内,没有内部滚动条的特性)
大家可以查看生成的html代码,与demo.jsp对比一下更好理解.
democlassic.jsp

一个通常的例子(大多数情况下,也许您只需要使用这些功能)
demo.jsp

功能比较多的一个例子,几乎涵盖了所有主要特性
demofull.jsp


下一步的计划比较简单:
1 完善打印功能
2 继续加强脚本语言的应用范围,简化使用方式
3 修改bug
4 写说明文档 呵呵 文档 终于要有了
5 回答大家的问题.








===============================
2007-03-21 
ECSide 1.30 发布
===============================
1 完善了系统的日志处理机制,原先那个太偷懒了,这次使用了log4j
终于可以自己配置日志的显示了,(修改log4j.properties文件来实现)
2 自定义ecside.properties  和 资源文件的时候,支持了以/WEB-INF/为起点的设置方式
大家可以自己定义ecside.properties文件 然后把自定义的文件放到WEB-INF下
然后在web.xml文件里进行配置
	<context-param>
		<param-name>ecsidePreferencesLocation</param-name>
		<param-value>/WEB-INF/ecside.properties</param-value>
	</context-param>
3 改变列宽的方式改变了:
原先的方式是:调宽一列时,他旁边的列变窄,现在则是调宽时表格的宽度增加.
如果表格没有使用内部滚动条,则还是使用传统方式进行调整.
4 BUG修正:一个过滤器的大BUG,还有一个JS的BUG
5 代码的包结构进行了调整,还有一些对代码的细小的修改.
6 更新了个别依赖jar包,升级了版本.

这个版本之后我将暂停ECSIDE的新版本的发布(只会发布BUG修正版)
因为我要酝酿一些大动作:
包括全新的DEMO,全新的功能: 
自定义列表的统计公式,
单元格的合并,
全新的列宽调整方式,
简化可编辑列表的使用(现在的比较难用啊 呵呵),
对同一页面多个表格的更好的支持,
对列和单元格更随心所欲的控制(这个将导致我完全抛弃现在的VIEW层的设计,
出一套全新的基于SPAN和DIV的列表系统,同时保留现在基于TABLE的实现,这个应该是最晚实现的,
一旦实现,也许ECSIDE的版本会一下跃到3.0 呵呵,因为确实是很大的变化和挑战.)






===============================
2007-03-13 
ECSide 1.25 发布
===============================
距离上一个版本，发布已经整整过去一个月了，也是放出新版本的时候了。
这么久没有更新原因有2：1是我最近确实太忙了，2是ECSIDE的发展遇到了一些瓶颈。呵呵
不过好在现在新版本终于可以拿出来了。
新功能主要有：
1 增加了escape功能，有了他就可以在一定程度上避免因数据中有特殊字符而带来的麻烦了。
用法：
<ec:column property="aaa" >#_ESCAPE: 你的文本asda1231#[ESC_HTML:${user.USERNAME}]另外一些文本</ec:column>
<ec:column .... value="#_ESCAPE:#[ESC_HTML:${user.USERNAME}]" />

#[ESC_HTML: .... ] 中间的部分是要ESCAPE的 ，有三种方式：ESC_HTML  ESC_XML  ESC_JS。
可以联合使用,但不能嵌套使用。
例如：  #_ESCAPE: asdasd #[ESC_HTML:qqqqqqqqq]另外一些文本 #[ESC_JS:qqqqqqqqq]

如果要ESCAPE的字符中有] 那么请使用 #~ESC_HTML: .... ~ 形式
如果要ESCAPE的字符中有~ 那么请使用 #^ESC_HTML: .... ^ 形式

2 支持打开一个shadowRow时候,关闭其他的shadowRow功能 
如果不想使用这个功能，可以在js里设置
ecsideObj为 js初始化的ecside对象。
ecsideObj.autoCloseOtherShadowRow=false;

3 刷新列表的时候,同时刷新当前打开的shadowRow,并且保持打开状态.

4 为ajax翻页 排序 刷新操作增加了 后置js回调。
可以通过指定
ecsdieObj.afterFillForm=函数名
作为回调，例如：
function testC(){
	alert(123)
}
ecsdieObj.afterFillForm=testC;

则在执行ajax翻页 排序 刷新操作后，将调用alert(123).
该回调会传入 ajax的response对象.


5 代码做了细节调整，修正了一些缺陷和bug.

6 完善了示例，例如加入了 增加记录的演示，在action中提供了 数据库分页 和非数据库分页两种方法。
非数据库分页 请在  ec:table 内加入  retrieveRowsCallback="process" 属性 

7 还有针对论坛中的很多朋友提出的建议和bug，做出了一些细节修改
在这里谢谢大家了。



即使不使用新特性，也强烈建议您升级，因为这一个月下来 1.1版还是暴露了很多的问题。



===============================
2007-02-13 
ECSide 1.1 final 发布
===============================
1 展现层代码重写，页面内部的结构进行了调整。
2 表格内部滚动条的js全部重写,提高了性能,改善了对百分比宽度的支持。
3 ec:table增加属性 listWidth，用来指定列表实际宽度（可选项）
(width用来指定显示宽度)
增加属性 hieght用来指定列表显示高度
(之前的版本使用 listHeight，此次全部改为height,但是listHeight还会保留一段时间)
4 增加编组功能。<ec:column group="hide"... 
这个只是一个初步的实现，会在以后版本里加强。
5 新增加EasyDataExport特性。
该特性是EasyDataAccess的一个衍生物，也是通过配置来实现导出。
见OPOA的例子。
有一点要主义，它是在DAO层导出，这样可以支持较大的数据量。
6 完善了ECSideFilter过滤器 修正了导出下载时的一个小bug（bug虽小，耗时不少）。
7 一些代码调整和bug修改。



===============================
2007-02-07 
ECSide 1.1 RC4 发布
===============================
1 新增加了一个 ec:mapping 标签，作用和ec:column的mappingItem类似，
但是可以脱离ectable单独使用。
2 完善了EcSideFilter过滤器。
3 重构了 easyList和 easyDataAccess相关代码
关于easyList和 easyDataAccess特性，
请参看Help_EasyDataAccess.txt以及easylist的教学录象还有示例。
4 一些细节的调整和bug的修改。
其中的一些bug还是比较严重(虽然出现几率很低)的，强烈建议更新。
在1.2版本之前，功能上基本不会有大变化了。
ECSide 1.1 final的主要改进也将集中在 bug修改 和 js、java代码重构上。
 


===============================
2007-02-03 
ECSide 1.1 RC3 发布
===============================
1 完善了排序相关的js
2 自定义的表头也支持排序了（demo_td.jsp）
3 ec:td标签增加了若干与html对应的属性。
4 列表高度可以通过js来调节。
5 ecside.js里增加了一些工具方法。
6 更完善的例子（demoOPOA.jsp，注意看jsp内的注释）
演示了如何改变列表高度 如何更好的使用shadowRow.
如何将easyList特性用在非列表场合。
7 一些细节的调整和bug的修改。




===============================
2007-02-02 
ECSide 1.1 RC2 发布
2月2日，对于我来说是一个特别的日子。
是小屁人儿的生日。
为了纪念她的生日，决定发布一个新版本。
这个版本虽然名是RC2 但是我觉得即使叫 1.2也不过分，因为加了两大新特性。
但是上次已经从1.0 RC1 直接跳到1.1 RC1了，这次不能再这样胡乱的起版本号了。
===============================
1 增加复杂表头的定义以及导出(实现这个导出可累死我了 :'( ) 
用法见demo_td.jsp例子。

2 支持表格的横向统计。
<ec:column cell="calcTotal"  width="80" title="合计" property="USERROLE,USERID" />
<ec:column cell="calcAvg"  width="80" title="平均" property="USERROLE,USERID" />
使用cell="calcTotal" 算合计 cell="calcAvg" 算平均，
property表示要计算的列，*号表示计算所有列。
位置不一定非要放到最后，可以在中间。:)
3 排序也使用ajax实现.
4 修改了部分js，现在的ecside.js已经可以和官方prototype.js配合了。
配合使用时，用prototype.js代替我精简的那个prototypeajax.js就可以了。
不过如无必要，建议还是使用我那个吧 毕竟我那个才9k.
5 给column增加了nowrap属性，等同于html里的nowrap。
6 includeParameters和excludeParameters支持前后利用*号进行模糊匹配，例如
excludeParameters="test,*aaa,bbb*,asdasd"

7 修正了easyList解析sql语句时的一个严重的bug。
8 示例数据库由hsql换成h2db，一个更好的潜入式数据库，大家不妨都试试。
他提供的那个B/S的管理程序也很好，和phpmyadmin有一拼了。
他和hsql兼容性很好 sql语句几乎一样，不用修改DAO.
（当然我对两者的了解都不是很深，也许很多地方不一样我不知道） .






===============================
2007-01-29 15点
ECSide 1.1 RC1 发布
===============================
1 新增easyList特性：可通过简单的配制，快速实现列表数据的展现、查询、修改、删除。
2 为ectable增加全局的“是否可编辑”属性，方便权限控制。 editable="true" or "false"。
3 修正了很多以前没有发现的bug，其中有些是非常严重的bug(但不常见)。
4 优化了一些代码，提升了一点速度，优化的方式主要是减少迭代内部的代码时间复杂度，属于初级优化。
5 将全局行号的取法由${TOTALROWCOUNT}换成了${GLOBALROWCOUNT}，更容易理解。
6 为可编辑列表增加了删除功能，具体实现可看相关例子。
7 提供了更多的示例。通过maim.html引导页面进行选择。(其中提供了一个简单的OPOA的例子)

PS:
即使不使用easyList特性，那么也建议更新该版本。
关于easyList特性的具体是使用方法，过一阵会推出新的flash教程。
想先尝鲜的可以结合例子以及之前发布的那个新特性的flash看一下。
（flash所在帖： http://www.javaeye.com/topic/50261 ）




===============================
2007-01-21 15点
===============================

1) 实现了cell的映射功能（详见示例的性别 和 角色列）,用法:
<ec:column mappingItem="用来映射的MAP在context内的key" mappingDefaultValue="当找不到映射值时要使用的默认值".../>
例如，在示例中，角色的信息以 “标识--名称”的形式放到了一个 map内
在action中 把这个map放到了 request.setAttribute("USERROLE_MAP", CommonDictionary.USERROLE);内
在页面使用
<ec:column property="USERROLE" title="角色" mappingItem="USERROLE_MAP" mappingDefaultValue="[错误的角色]"/>
就会自动将名称显示出来。
2) 做了一个简单的小标签 用来从map生成 select的option列表。
<ec:options items="MAP在context内的key" defaultKey="默认选中的option的value" tagAttributes="附加的html属性"/>
3) 对ec:extend标签做了扩充，增加了位置设置属性 location
top: form内列表主体前  ; bottom : form内列表主体后  
toolbar或不设置location属性  在toolbar的扩展位置.
4) 代码进行了一点点修改，对使用没有影响。


===============================
2007-01-20 9点
===============================
沉寂两天，但一直没有闲着，带来了大变化。
1) 实现了灵活的可定制的“可编辑列表”功能 （详见help.txt 200行左右的描述 以及示例）
支持多种编辑方式（文本框 下拉框 将来还会支持更多），可自定义模版（使用自定义的文本框 下拉框），还提供了：
对可编辑列进行标识，对编辑过的cell进行标识（默认为改变单元格背景色），
使用ajax技术提交后台，提交成功的cell将清除编辑标识 等贴心设计。
2) 增加了 高亮显示选中行的功能，使用 ec:table属性: selectlightRow="true"
3) 去掉了 fullnavigation导航条，将其与navigation导航条合并
改为为ec:table增加属性 nearPageNum="数字" 用来设置导航条前后显示的邻近页数 等于0时 为不使用邻近页。
4) 为ec:table增加了 maxRowsExported="数字" 属性，用来限制导出大最大条数， 如果数据超过这个数目，则不执行导出操作。
5) 为之前增加的ec:table的pageSizeList属性 增加了特性
pageSizeList="max:200,10,15,30,50,100,all" 如果 10--100以及all中，某一项大过了max的200则 不在列表中显示。
也可以只使用pageSizeList="max:200" 此时将 使用默认设置，并进行max控制。
6) 解决了pdf中文编码问题，终于支持pdf导出了。
7) 恢复了对sitemesh的支持，用法见原版ec文档（我没有亲自没有测试,因为我不会用sitemesh :( ）。
8) Ajax翻页优化，同时增加了 ECSide.findAjaxZoneAtClien 属性，可设置 客户端 还是 服务端进行 html代码剪裁。
默认推荐使用 服务器端。
9) 再次对js和java代码进行了较大规模的重构,清理了一些无用代码，添加了必要的协议信息。
10) 一些细节的修改(例如对滚轮的支持更自然,filterable="true"手动调节列宽功能屏蔽等) 
还有对一些小bug的修正，但是由于变化较大，肯定还会带来一些新bug。
11) 整个示例的应用逐步发展为 ecside 的最佳实践，加入了hsqldb（hsqldb的使用参考了springside），全新的例子。
当然还不够好 会在以后的日子里继续完善。
12) 做了一个简单的logo :)。


===============================
2007-01-16 14点
===============================
1) 当使用“列表内部滚动条”时，可以使用百分比来设置列表的宽度了。
(但还是建议您使用像素（px）作为列表和列的宽度单位,因为百分还有一些小bug)
还有个建议 不管是使用什么样的宽度，建议都要使用一个“自动宽度”的column，
就是说不要给所有的ec:column都指定width，给其中一个点“自由”，这样很多已知的关于列宽调整的问题都可以解决。
2) 对eccn.js进行了大量的修改，提供了更好(但不完美)的IE和FF兼容（一致）性（这个工作差点把我累吐血）.
ff和ie 在取得对象坐标和宽度的算法不同 太郁闷了
3) 修正了一些bug。


===============================
2007-01-12 14点
===============================
1) 为“列表内部滚动条”增加了对鼠标滚轮的支持(只在ie6和ff2下测试过,其他版本没有测试)
2) 将部分“列表内部滚动条”相关的代码从java中提出,改用js实现.
3) 对js文件做了一些调整。
4) 修正了一些小bug。


===============================
2007-01-11 17点30
===============================
1) 修正了一个“列表内部滚动条”的bug
该bug表现为在 IE里 有些windows的主题下，纵向滚动条不可用。FT!!!!!
2) eccn.js做了一点小小的改动，为将来做过编码支持打下了一点点基础.


===============================
2007-01-11 14点
===============================
1) 修正了改变页面大小时“列表内部滚动条”错乱的bug
2) 重构了“列表内部滚动条”相关的js和java代码


===============================
2007-01-11 11点30
都是关于“列表内部滚动条”的
===============================
1) 修正了使用ajax翻页时“列表内部滚动条”错乱的bug
2) 增加了当列表内容的实际宽度和高度小于设置的宽度和高度的时候，
   自动调整区域大小,同时自动隐藏滚动条（只隐藏横向的）的功能。


===============================
2007-01-10 17点
===============================
增加了“固定列表头，滚动列表体”(“列表内部滚动条”)的功能
这个功能实现起来比我一开始想像的复杂
不是简单的使用一个 div overflow:scroll就可以搞定的
虽然功能是支持了 但是代码肯定还有很多bug或者是可以改进的地方
欢迎大家积极的提出宝贵的意见 谢谢了

使用方法：
ec:table标签内 增加
listHeight="数字" 属性 （指定列表体的高度）
同时把要指定 width="数字" 不能省略 同时要使用绝对大小 而不要使用百分比
详见例子:
demo0.jsp


===============================
2007-01-05 17点
===============================
修改了部分js代码 修正了几个小bug
完善了一下 demo0.jsp 


===============================
2007-01-04 17点
===============================
增加shadowRow功能
shadowRow我自己瞎起的名字 解释如下：
每行下面可以再加一个子行 这个行里显示什么可以由大家自己定义 
常见的应用是在有些论坛 论坛主题列表里 当你点击行开头的小加号的时候 会在这行下面展开一个区域 那里面显示的是主帖的内容. 
我们可以把这个扩展一下 利用ajax从后台去读取我们想读取的信息,这样我们就可以做任何我们想做的事情了) 
该功能是不通过标签或java代码实现 纯js实现。
详见例子 demo0.jsp （大家一定要注意看demo0.jsp里的注释啊 呵呵）



===============================
2007-01-03 16点
===============================
这个更新主要是bug修改 i18n等 没有加入新功能


===============================
2007-01-02 14点
===============================

java文件变更：
修正若干bug 如colum的单击双击不好用等
增加了 带邻近页面导航的导航条 "fullnavigation" 不带的是"navigation"
ec:table 增加了alwaysShowExtend="true/false" 属性 可以在不显示组件自带工具条时依然显示 自定义扩展功能条
调整列宽时，去掉最后一列右边的调整按钮（如果最后一列表头是跨列的 则不能去掉 下次会想办法解决）
修正其他若干bug

ec:table 增加了 excludeParameters 和 includeParameters 属性
使用后，ecside将自动排除或保留属性中所指定的“表单属性”
这个如果你理解了 autoIncludeParameters 的用处 就不难理解这两个属性的用处了
注意: excludeParameters 比 includeParameters 有更高的优先级 


eccn.js文件变更
提取若干常量
ECCN类 增加useAjax开关 可是不使用ajax技术进行翻页
ECCN类 增加回调函数onLoad 可以在完成ajax翻页后 调用指定的函数
修改ECCN类的 init方法，只有执行init方法后 列表和相关按钮才可见（为防止一些错误操作）
导出 打印时候的提交操作 全部提交到一个隐藏的iframe中（这么做可以消除一些无法导出的bug）
修改 EccnUtil.checkAll 函数 复选框全选按钮不会影响到disabled项 不会在无数据或一条数据时候报错
修正其他若干bug


例子更新：
例子里带了一个 基于数据库分页的action的例子
demo.do
为了配合例子 ecside默认的设置被修改为如下（extremetable.properties文件）
table.retrieveRowsCallback.default=org.extremecomponents.table.callback.LimitCallback



完整版，但不包括所依赖的WEB-INF/lib下的文件.依赖文件可以去圈子里下载,
也可以去javaeye ftp下载,也可以按照WEB-INF/lib下的filelist.txt文件所列,自行下载.

